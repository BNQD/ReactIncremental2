{"version":3,"sources":["components/BuyAmountButtons.js","components/BuyGeneratorButtons.js","App.js","serviceWorker.js","index.js"],"names":["BuyAmountButtons","props","useState","buyButtonsClass","setBuyButtonsClass","selectBuyAmount","amount","setBuyAmount","Error","className","onClick","BuyGeneratorButtons","increaseGenerator","type","coins","setCoins","setGenerators","generators","1","totalPerSecond","setPerSecond","updatePerSecond","buyAmount","App","10","100","perSecond","useEffect","interval","setInterval","clearInterval","id","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sQAmDeA,G,MAjDU,SAACC,GAAW,IAAD,EACaC,mBAAU,CACzD,YAAc,4BACd,YAAc,8BACd,gBAAkB,gCAJgB,mBAC3BC,EAD2B,KACVC,EADU,KAQ7BC,EAAkB,SAACC,GACxB,OAAOA,GACN,KAAK,EACJF,EAAmB,CAClB,YAAc,4BACd,YAAc,8BACd,gBAAkB,gCAEnBH,EAAMM,aAAa,GACnB,MACD,KAAK,GACJH,EAAmB,CAClB,YAAc,8BACd,YAAc,4BACd,gBAAkB,gCAEnBH,EAAMM,aAAa,IACnB,MACD,KAAK,IACJH,EAAmB,CAClB,YAAc,8BACd,YAAc,8BACd,gBAAkB,8BAEnBH,EAAMM,aAAa,KACnB,MACD,QACC,MAAM,IAAIC,MAAM,2BAInB,OACC,oCACC,6BACA,4BAAQC,UAAWN,EAAe,YAAiBO,QAAS,kBAAML,EAAgB,KAAlF,OACA,4BAAQI,UAAWN,EAAe,YAAiBO,QAAS,kBAAML,EAAgB,MAAlF,QACA,4BAAQI,UAAWN,EAAe,gBAAqBO,QAAS,kBAAML,EAAgB,OAAtF,Y,OChBYM,EA5Ba,SAACV,GAC5B,IAKMW,EAAoB,SAACC,EAAMP,GACnB,IAATO,GACCZ,EAAMa,OAAS,GAAGR,IACtBL,EAAMc,SAAUd,EAAMa,MAAQ,GAAGR,GACjCL,EAAMe,cAAN,2BAAyBf,EAAMgB,YAA/B,IAA2CC,EAAEjB,EAAMgB,WAAW,GAAGX,KAT3C,WACvB,IAAMa,EAAiBlB,EAAMgB,WAAW,GACxChB,EAAMmB,aAAaD,GAQlBE,KAKF,OACC,oCACA,6BACC,4BAAQX,QAAW,kBAAME,EAAkB,EAAEX,EAAMqB,aAAnD,kBACiBrB,EAAMgB,WAAW,GADlC,IAEC,6BAFD,cC8BYM,EA9CH,WAAO,IAAD,EACWrB,mBAAS,GADpB,mBACTY,EADS,KACFC,EADE,OAEqBb,mBAAU,CAC/CgB,EAAE,EACFM,GAAG,EACHC,IAAI,IALY,mBAETR,EAFS,KAEGD,EAFH,OAOmBd,mBAAU,GAP7B,mBAOTwB,EAPS,KAOEN,EAPF,OAQmBlB,mBAAU,GAR7B,mBAQToB,EARS,KAQEf,EARF,KAsBhB,OAZDoB,qBAAW,WACV,IAAMR,EAAiBF,EAAW,GAClCG,EAAaD,KACX,CAACF,IAEJU,qBAAW,WACV,IAAMC,EAAWC,aAAa,WAC7Bd,GAAS,SAAAD,GAAK,OAAIA,EAAQY,OACxB,KACH,OAAO,kBAAMI,cAAcF,MACzB,CAACF,IAGJ,yBAAKK,GAAG,WACL,yBAAKA,GAAG,SAAStB,UAAW,UAC7B,4BACEK,GAEF,0CACcY,IAGf,yBAAKK,GAAG,OAAOtB,UAAW,UACzB,4BAAQC,QAAW,kBAAMK,EAAUD,EAAQ,KAA3C,SAGA,kBAAC,EAAD,CAAkBP,aAAcA,IAChC,kBAAC,EAAD,CAAqBU,WAAYA,EAAYD,cAAeA,EAC3DF,MAAOA,EAAOC,SAAUA,EACxBK,aAAcA,EACdE,UAAWA,OCjCKU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.987aed78.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst BuyAmountButtons = (props) => {\r\n\tconst [ buyButtonsClass, setBuyButtonsClass ] = useState ({\r\n\t\t'oneBuyClass':'buyAmountSelectorSelected',\r\n\t\t'tenBuyClass':'buyAmountSelectorUnselected',\r\n\t\t'hundredBuyClass':'buyAmountSelectorUnselected'\r\n\t})\r\n\r\n\r\n\tconst selectBuyAmount = (amount) => {\r\n\t\tswitch(amount){\r\n\t\t\tcase 1:\r\n\t\t\t\tsetBuyButtonsClass({\r\n\t\t\t\t\t'oneBuyClass':'buyAmountSelectorSelected',\r\n\t\t\t\t\t'tenBuyClass':'buyAmountSelectorUnselected',\r\n\t\t\t\t\t'hundredBuyClass':'buyAmountSelectorUnselected'\r\n\t\t\t\t})\r\n\t\t\t\tprops.setBuyAmount(1)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 10:\r\n\t\t\t\tsetBuyButtonsClass({\r\n\t\t\t\t\t'oneBuyClass':'buyAmountSelectorUnselected',\r\n\t\t\t\t\t'tenBuyClass':'buyAmountSelectorSelected',\r\n\t\t\t\t\t'hundredBuyClass':'buyAmountSelectorUnselected'\r\n\t\t\t\t})\r\n\t\t\t\tprops.setBuyAmount(10)\r\n\t\t\t\tbreak;\r\n\t\t\tcase 100:\r\n\t\t\t\tsetBuyButtonsClass({\r\n\t\t\t\t\t'oneBuyClass':'buyAmountSelectorUnselected',\r\n\t\t\t\t\t'tenBuyClass':'buyAmountSelectorUnselected',\r\n\t\t\t\t\t'hundredBuyClass':'buyAmountSelectorSelected'\r\n\t\t\t\t})\r\n\t\t\t\tprops.setBuyAmount(100)\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('selectBuyAmount Error')\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<br/>\r\n\t\t\t<button className={buyButtonsClass['oneBuyClass']} onClick={() => selectBuyAmount(1)}> 1 </button>\r\n\t\t\t<button className={buyButtonsClass['tenBuyClass']} onClick={() => selectBuyAmount(10)}> 10 </button>\r\n\t\t\t<button className={buyButtonsClass['hundredBuyClass']} onClick={() => selectBuyAmount(100)}> 100 </button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default BuyAmountButtons","import React from 'react';\r\n\r\nconst BuyGeneratorButtons = (props) => {\r\n\tconst updatePerSecond = () => {\r\n\t\tconst totalPerSecond = props.generators[1]\r\n\t\tprops.setPerSecond(totalPerSecond)\r\n\t}\r\n\t\r\n\tconst increaseGenerator = (type, amount) => {\r\n\t\tif (type === 1) {\r\n\t\t\tif (props.coins >= 10*amount){\r\n\t\t\tprops.setCoins (props.coins - 10*amount)\r\n\t\t\tprops.setGenerators ({...props.generators, 1:props.generators[1]+amount})\r\n\t\t\tupdatePerSecond()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t<br/>\r\n\t\t\t<button onClick = {() => increaseGenerator(1,props.buyAmount)}>\r\n\t\t\t\tBuy Generator ({props.generators[1]})\r\n\t\t\t\t<br/>\r\n\t\t\t\tCost: 10\r\n\t\t\t</button>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default BuyGeneratorButtons","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport BuyAmountButtons from './components/BuyAmountButtons'\nimport BuyGeneratorButtons from './components/BuyGeneratorButtons'\n\nconst App = () => {\n\tconst [ coins, setCoins ] = useState(0)\n\tconst [ generators, setGenerators ] = useState ({\n\t\t1:0,\n\t\t10:0,\n\t\t100:0,\n\t})\n\tconst [ perSecond, setPerSecond ] = useState (0)\n\tconst [ buyAmount, setBuyAmount ] = useState (1)\n\t\n\tuseEffect (() => {\n\t\tconst totalPerSecond = generators[1]\n\t\tsetPerSecond(totalPerSecond)\n\t}, [generators])\n\t\n\tuseEffect (() => {\n\t\tconst interval = setInterval (() => {\n\t\t\tsetCoins(coins => coins + perSecond)\n\t\t}, 1000)\n\t\treturn () => clearInterval(interval)\n\t}, [perSecond])\n\n  return (\n\t<div id=\"wrapper\">\n    <div id=\"header\" className =\"center\">\n\t\t\t<h1>\n\t\t\t\t{coins}\n\t\t\t</h1>\n\t\t\t<p>\n\t\t\t\tPer Second: {perSecond}\n\t\t\t</p>\n    </div>\n\t\t<div id=\"body\" className =\"center\">\n\t\t\t<button onClick = {() => setCoins (coins + 1)}>\n\t\t\t\tClick\n\t\t\t</button>\n\t\t\t<BuyAmountButtons setBuyAmount={setBuyAmount}/>\n\t\t\t<BuyGeneratorButtons generators={generators} setGenerators={setGenerators} \n\t\t\t\tcoins={coins} setCoins={setCoins} \n\t\t\t\tsetPerSecond={setPerSecond}\n\t\t\t\tbuyAmount={buyAmount}/>\n\t\t</div>\n\t</div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}